<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SH30F9xxx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SH30F9xxx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Tue Apr 08 09:19:25 2025
<BR><P>
<H3>Maximum Stack Usage =        324 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
drv_handle &rArr; Comm_Recv &rArr; Comm_Recv_Deal &rArr; user_comm_operator_check_receive &rArr; user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC_Handler</a> from sh30f9xx_sb0_interrupt.o(i.ADC_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[c]">BOD_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[7]">Default_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced 9 times from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[e]">EXTI0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[20]">EXTI15_10_Handler</a> from mdl_getwave.o(i.EXTI15_10_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[f]">EXTI1_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[10]">EXTI2_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[11]">EXTI3_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[19]">EXTI9_4_Handler</a> from mdl_getwave.o(i.EXTI9_4_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1]">FSM</a> from fsm.o(i.FSM) referenced 2 times from task.o(.data)
 <LI><a href="#[53]">FsmDebugDoingHandler</a> from fsm_debug.o(i.FsmDebugDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[52]">FsmDebugEnterHandler</a> from fsm_debug.o(i.FsmDebugEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[57]">FsmE0DoingHandler</a> from fsm_e0.o(i.FsmE0DoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[56]">FsmE0EnterHandler</a> from fsm_e0.o(i.FsmE0EnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4f]">FsmEndCleanDoingHandler</a> from fsm_endclean.o(i.FsmEndCleanDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4e]">FsmEndCleanEnterHandler</a> from fsm_endclean.o(i.FsmEndCleanEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[51]">FsmErrorDoingHandler</a> from fsm_error.o(i.FsmErrorDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[50]">FsmErrorEnterHandler</a> from fsm_error.o(i.FsmErrorEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[55]">FsmF6DoingHandler</a> from fsm_f6.o(i.FsmF6DoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[54]">FsmF6EnterHandler</a> from fsm_f6.o(i.FsmF6EnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[45]">FsmIdleEnterDoingHandler</a> from fsm_idle.o(i.FsmIdleEnterDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[44]">FsmIdleEnterHandler</a> from fsm_idle.o(i.FsmIdleEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4b]">FsmIgintionDoingHandler</a> from fsm_igintion.o(i.FsmIgintionDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4a]">FsmIgintionEnterHandler</a> from fsm_igintion.o(i.FsmIgintionEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[47]">FsmInitDoingHandler</a> from fsm_init.o(i.FsmInitDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[46]">FsmInitEnterHandler</a> from fsm_init.o(i.FsmInitEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[49]">FsmPreFanDoingHandler</a> from fsm_prefan.o(i.FsmPreFanDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[48]">FsmPreFanEnterHandler</a> from fsm_prefan.o(i.FsmPreFanEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4d]">FsmStableDoingHandler</a> from fsm_stable.o(i.FsmStableDoingHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[4c]">FsmStableEnterHandler</a> from fsm_stable.o(i.FsmStableEnterHandler) referenced from fsm.o(.constdata)
 <LI><a href="#[3d]">GetMachineInfo_Z8L</a> from user_machineinfo.o(i.GetMachineInfo_Z8L) referenced from user_machineinfo.o(.constdata)
 <LI><a href="#[6]">HardFault_Handler</a> from sh30f9xx_sb0_interrupt.o(i.HardFault_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[2e]">MainFrame0LoadData</a> from user_comm.o(i.MainFrame0LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[38]">MainFrame10LoadData</a> from user_comm.o(i.MainFrame10LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[39]">MainFrame11LoadData</a> from user_comm.o(i.MainFrame11LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[3a]">MainFrame12LoadData</a> from user_comm.o(i.MainFrame12LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[3b]">MainFrame13LoadData</a> from user_comm.o(i.MainFrame13LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[3c]">MainFrame14LoadData</a> from user_comm.o(i.MainFrame14LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[2f]">MainFrame1LoadData</a> from user_comm.o(i.MainFrame1LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[30]">MainFrame2LoadData</a> from user_comm.o(i.MainFrame2LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[31]">MainFrame3LoadData</a> from user_comm.o(i.MainFrame3LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[32]">MainFrame4LoadData</a> from user_comm.o(i.MainFrame4LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[33]">MainFrame5LoadData</a> from user_comm.o(i.MainFrame5LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[34]">MainFrame6LoadData</a> from user_comm.o(i.MainFrame6LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[35]">MainFrame7LoadData</a> from user_comm.o(i.MainFrame7LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[36]">MainFrame8LoadData</a> from user_comm.o(i.MainFrame8LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[37]">MainFrame9LoadData</a> from user_comm.o(i.MainFrame9LoadData) referenced from user_comm.o(.constdata)
 <LI><a href="#[5]">NMI_Handler</a> from sh30f9xx_sb0_interrupt.o(i.NMI_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[15]">PCA0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[16]">PCA1_Handler</a> from sh30f9xx_sb0_interrupt.o(i.PCA1_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[17]">PCA2_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[18]">PCA3_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[23]">PWM0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[24]">PWM1_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[25]">PWM2_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[26]">PWM3_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from sh30f9xx_sb0_interrupt.o(i.PendSV_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[42]">PumpBurstFunction</a> from user_pump.o(i.PumpBurstFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[41]">PumpColdFunction</a> from user_pump.o(i.PumpColdFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[40]">PumpCycleFunction</a> from user_pump.o(i.PumpCycleFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[43]">PumpForceFunction</a> from user_pump.o(i.PumpForceFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[3f]">PumpHeatFunction</a> from user_pump.o(i.PumpHeatFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[3e]">PumpUnworkFunction</a> from user_pump.o(i.PumpUnworkFunction) referenced from user_pump.o(.constdata)
 <LI><a href="#[d]">RCC_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1b]">SPI0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1c]">SPI1_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from sh30f9xx_sb0_interrupt.o(i.SVC_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from sh30f9xx_sb0_interrupt.o(i.SysTick_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[2c]">SystemInit</a> from system_sh30f9xx_sb0.o(i.SystemInit) referenced from startup_sh30f9xx_sb0_keil.o(.text)
 <LI><a href="#[27]">TIM0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[28]">TIM1_FIFO0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[29]">TIM2_FIFO1_Handler</a> from sh30f9xx_sb0_interrupt.o(i.TIM2_FIFO1_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[2a]">TIM3_FIFO2_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[13]">TWI0_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[14]">TWI1_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1a]">UART0_Handler</a> from bsp_uart0.o(i.UART0_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1d]">UART1_Handler</a> from bsp_uart1.o(i.UART1_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1e]">UART2_Handler</a> from mdl_usart.o(i.UART2_Handler) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[1f]">UART3_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[21]">UART4_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[22]">UART5_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[b]">WWDT_Handler</a> from startup_sh30f9xx_sb0_keil.o(.text) referenced from startup_sh30f9xx_sb0_keil.o(RESET)
 <LI><a href="#[2d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_sh30f9xx_sb0_keil.o(.text)
 <LI><a href="#[0]">drv_handle</a> from task.o(i.drv_handle) referenced 2 times from task.o(.data)
 <LI><a href="#[2b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[3]">mdl_handle</a> from task.o(i.mdl_handle) referenced 2 times from task.o(.data)
 <LI><a href="#[2]">user_handle</a> from task.o(i.user_handle) referenced 2 times from task.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(.text)
</UL>
<P><STRONG><a name="[1ae]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[58]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[72]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1af]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1b0]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1b1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1b2]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1b3]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>BOD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PCA0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PCA2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PCA3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PWM0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PWM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PWM2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PWM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RCC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_FIFO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_FIFO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TWI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TWI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveTask
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_systick_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromSeg
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMdlTmpVal
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfFromLoad
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_Blf
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSegLoad
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadEData
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromBlfI
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromPercent
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetDCFanPWM
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromFanU
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFanUFromBlf
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatTime
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertCtrlToDbg_Blf
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalWaterFlux
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalFanSpeed
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetPumpPWM
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetBlfPWM
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[1b5]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame4LoadData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame0LoadData
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadEData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDeadZone
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNonStkSpd
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatStudy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatCD
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyTimeInit
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyGetTime
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWashEnvState
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNWrite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_unpack_receive
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
</UL>

<P><STRONG><a name="[1b6]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1b8]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTemRunInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeInit
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlInit
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunctionInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_adc_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMachineInfo_Z8L
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableEnterHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanEnterHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitEnterHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionEnterHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6EnterHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorEnterHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanEnterHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0EnterHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugEnterHandler
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_LoadData
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionInit
</UL>

<P><STRONG><a name="[1ba]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[144]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[196]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[197]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1bb]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1bc]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[60]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[69]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[68]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[59]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1be]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1bf]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>ADC_ChannelConfig</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, sh30f9xx_sb0_adc.o(i.ADC_ChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bps_adc_get_value
</UL>

<P><STRONG><a name="[15c]"></a>ADC_GetConversionValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bps_adc_get_value
</UL>

<P><STRONG><a name="[15b]"></a>ADC_GetSoftwareStartConversionStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sh30f9xx_sb0_adc.o(i.ADC_GetSoftwareStartConversionStatus))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bps_adc_get_value
</UL>

<P><STRONG><a name="[12]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sh30f9xx_sb0_interrupt.o(i.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>ADC_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, sh30f9xx_sb0_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[160]"></a>ADC_OnOff</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sh30f9xx_sb0_adc.o(i.ADC_OnOff))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[15a]"></a>ADC_SoftwareStartConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_adc.o(i.ADC_SoftwareStartConversion))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bps_adc_get_value
</UL>

<P><STRONG><a name="[73]"></a>BathFunction</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, user_washmode.o(i.BathFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BathFunction &rArr; RecordLiterFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordLiterFunction
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathRecordReset
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeFunction
</UL>

<P><STRONG><a name="[79]"></a>BathInit</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, user_washmode.o(i.BathInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BathInit
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathRecordReset
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetBathLite
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeJdg
</UL>

<P><STRONG><a name="[78]"></a>BathRecordReset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_washmode.o(i.BathRecordReset))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
</UL>

<P><STRONG><a name="[7a]"></a>Blf_Iteration_10ms</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, mdl_blf.o(i.Blf_Iteration_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Blf_Iteration_10ms &rArr; Drv_SetBlfPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdapData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetBlfPWM
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_handle
</UL>

<P><STRONG><a name="[7f]"></a>CalFanSpeed</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, mdl_getwave.o(i.CalFanSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CalFanSpeed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveTask
</UL>

<P><STRONG><a name="[80]"></a>CalWaterFlux</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mdl_getwave.o(i.CalWaterFlux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CalWaterFlux &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveTask
</UL>

<P><STRONG><a name="[147]"></a>CheckPulseTm</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mdl_getwave.o(i.CheckPulseTm))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_FIFO1_Handler
</UL>

<P><STRONG><a name="[81]"></a>ClrSubChgCnt</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, user_segctrl.o(i.ClrSubChgCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClrSubChgCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHeatStable
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
</UL>

<P><STRONG><a name="[83]"></a>Comm_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_comm.o(i.Comm_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Comm_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifoInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[85]"></a>Comm_Recv</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_comm.o(i.Comm_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = Comm_Recv &rArr; Comm_Recv_Deal &rArr; user_comm_operator_check_receive &rArr; user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Recv_Deal
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_handle
</UL>

<P><STRONG><a name="[88]"></a>Comm_Send</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_comm.o(i.Comm_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Comm_Send &rArr; Comm_Send_LoadData &rArr; usartSend
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_Sequence
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_LoadData
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[91]"></a>ConvertCtrlToDbg_Blf</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, user_tmpctrl.o(i.ConvertCtrlToDbg_Blf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ConvertCtrlToDbg_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
</UL>

<P><STRONG><a name="[92]"></a>ConvertDbgToCtrl_Blf</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, user_tmpctrl.o(i.ConvertDbgToCtrl_Blf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromBlfI
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[93]"></a>ConvertDbgToCtrl_DCFan</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, user_dcfan.o(i.ConvertDbgToCtrl_DCFan))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ConvertDbgToCtrl_DCFan &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromFanSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNonStkSpd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[98]"></a>DCFanProcess</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, user_dcfan.o(i.DCFanProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DCFanProcess &rArr; Drv_SetDCFanPWM &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSurState
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetDCFanPWM
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_Timer
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdapData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[9e]"></a>DCFan_GetStkSta</STRONG> (Thumb, 560 bytes, Stack size 40 bytes, user_dcfan.o(i.DCFan_GetStkSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DCFan_GetStkSta &rArr; GetNonStkSpd &rArr; ConvertDbgToCtrl_DCFan &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNonStkSpd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
</UL>

<P><STRONG><a name="[a0]"></a>DCFan_NonStkSet</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_dcfan.o(i.DCFan_NonStkSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DCFan_NonStkSet &rArr; GetFanUFromBlf &rArr; GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromPercent
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFanUFromBlf
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDcFanUfromBlf
</UL>

<P><STRONG><a name="[a3]"></a>DS1302_Read</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, mdl_ds1302.o(i.DS1302_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DS1302_Read &rArr; GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeRead
</UL>

<P><STRONG><a name="[aa]"></a>DS1302_TimeRead</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, mdl_ds1302.o(i.DS1302_TimeRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DS1302_TimeRead &rArr; DS1302_Read &rArr; GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyTimeInit
</UL>

<P><STRONG><a name="[ab]"></a>Drv_InOutput_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_inoutput.o(i.Drv_InOutput_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drv_InOutput_Init &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[ad]"></a>Drv_InOutput_Process</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_inoutput.o(i.Drv_InOutput_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Drv_InOutput_Process &rArr; InputPortsUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPortsUpdate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPortsFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_handle
</UL>

<P><STRONG><a name="[ac]"></a>Drv_OutPut_Set</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, drv_inoutput.o(i.Drv_OutPut_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetPumpPWM
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_InOutput_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetDCFanPWM
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Work
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterDoingHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorEnterHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorDoingHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0EnterHandler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveCheckFunction
</UL>

<P><STRONG><a name="[7e]"></a>Drv_SetBlfPWM</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mdl_blf.o(i.Drv_SetBlfPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Drv_SetBlfPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_SetCCRValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
</UL>

<P><STRONG><a name="[9d]"></a>Drv_SetDCFanPWM</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, drv_dcfan.o(i.Drv_SetDCFanPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Drv_SetDCFanPWM &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetDuty
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
</UL>

<P><STRONG><a name="[b0]"></a>Drv_SetPumpPWM</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, drv_pump.o(i.Drv_SetPumpPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_SetCCRValue
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
</UL>

<P><STRONG><a name="[b3]"></a>E2EraseSector</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_eeprom.o(i.E2EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = E2EraseSector &rArr; FLASH_E2_EraseSector &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_Unlock
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_Lock
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
</UL>

<P><STRONG><a name="[b7]"></a>E2WriteBuf</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, bsp_eeprom.o(i.E2WriteBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_Unlock
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramPage_HalfWord
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
</UL>

<P><STRONG><a name="[20]"></a>EXTI15_10_Handler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, mdl_getwave.o(i.EXTI15_10_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI15_10_Handler &rArr; f_CalPulseWidth
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetPendingFlagStatus
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearPendingFlag
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_NopDelay
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CalPulseWidth
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI9_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mdl_getwave.o(i.EXTI9_4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>EXTI_ClearPendingFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sh30f9xx_sb0_exti.o(i.EXTI_ClearPendingFlag))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_Handler
</UL>

<P><STRONG><a name="[b9]"></a>EXTI_GetPendingFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sh30f9xx_sb0_exti.o(i.EXTI_GetPendingFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_Handler
</UL>

<P><STRONG><a name="[162]"></a>EXTI_Init</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, sh30f9xx_sb0_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
</UL>

<P><STRONG><a name="[163]"></a>EXTI_PinConfig</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, sh30f9xx_sb0_exti.o(i.EXTI_PinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_PinConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
</UL>

<P><STRONG><a name="[c0]"></a>FLASH_CacheReset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_CacheReset))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_EraseSector
</UL>

<P><STRONG><a name="[c2]"></a>FLASH_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramPage_HalfWord
</UL>

<P><STRONG><a name="[bf]"></a>FLASH_Clear_PGMWindow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_Clear_PGMWindow))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_EraseSector
</UL>

<P><STRONG><a name="[b5]"></a>FLASH_E2_EraseSector</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_E2_EraseSector &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Clear_PGMWindow
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CacheReset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Set_PGMWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2EraseSector
</UL>

<P><STRONG><a name="[b6]"></a>FLASH_E2_Lock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2WriteBuf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2EraseSector
</UL>

<P><STRONG><a name="[c1]"></a>FLASH_E2_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Clear_PGMWindow
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_CacheReset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Set_PGMWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramPage_HalfWord
</UL>

<P><STRONG><a name="[b8]"></a>FLASH_E2_ProgramPage_HalfWord</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_ProgramPage_HalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramHalfWord
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Verify_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2WriteBuf
</UL>

<P><STRONG><a name="[12f]"></a>FLASH_E2_ReadByte</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_E2_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlash
</UL>

<P><STRONG><a name="[b4]"></a>FLASH_E2_Unlock</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_E2_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2WriteBuf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2EraseSector
</UL>

<P><STRONG><a name="[c4]"></a>FLASH_GetStatus</STRONG> (Thumb, 130 bytes, Stack size 4 bytes, sh30f9xx_sb0_flash.o(i.FLASH_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[be]"></a>FLASH_Set_PGMWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sh30f9xx_sb0_flash.o(i.FLASH_Set_PGMWindow))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_EraseSector
</UL>

<P><STRONG><a name="[c3]"></a>FLASH_Verify_Byte</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, sh30f9xx_sb0_flash.o(i.FLASH_Verify_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_Verify_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramPage_HalfWord
</UL>

<P><STRONG><a name="[bd]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sh30f9xx_sb0_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ProgramHalfWord
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_EraseSector
</UL>

<P><STRONG><a name="[1]"></a>FSM</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, fsm.o(i.FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[c5]"></a>FanTypeJudge</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, user_debug.o(i.FanTypeJudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FanTypeJudge
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[1a1]"></a>Flame_Check</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, user_systemrun.o(i.Flame_Check))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
</UL>

<P><STRONG><a name="[53]"></a>FsmDebugDoingHandler</STRONG> (Thumb, 1300 bytes, Stack size 24 bytes, fsm_debug.o(i.FsmDebugDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = FsmDebugDoingHandler &rArr; GetFanUFromBlf &rArr; GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetManualSeg
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrl_Timer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromSeg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_Blf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFanUFromBlf
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromFanSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDbgInfo
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>FsmDebugEnterHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fsm_debug.o(i.FsmDebugEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FsmDebugEnterHandler &rArr; SegCtrlInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>FsmE0DoingHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsm_e0.o(i.FsmE0DoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmE0DoingHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>FsmE0EnterHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsm_e0.o(i.FsmE0EnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FsmE0EnterHandler &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>FsmEndCleanDoingHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, fsm_endclean.o(i.FsmEndCleanDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FsmEndCleanDoingHandler &rArr; SetEndCleanTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEndCleanTimer
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>FsmEndCleanEnterHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fsm_endclean.o(i.FsmEndCleanEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmEndCleanEnterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>FsmErrorDoingHandler</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, fsm_error.o(i.FsmErrorDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FsmErrorDoingHandler &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>FsmErrorEnterHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, fsm_error.o(i.FsmErrorEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FsmErrorEnterHandler &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>FsmF6DoingHandler</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, fsm_f6.o(i.FsmF6DoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FsmF6DoingHandler &rArr; SetFsmState
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFunOutputs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>FsmF6EnterHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fsm_f6.o(i.FsmF6EnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmF6EnterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>FsmIdleEnterDoingHandler</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, fsm_idle.o(i.FsmIdleEnterDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FsmIdleEnterDoingHandler &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>FsmIdleEnterHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, fsm_idle.o(i.FsmIdleEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FsmIdleEnterHandler &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>FsmIgintionDoingHandler</STRONG> (Thumb, 738 bytes, Stack size 24 bytes, fsm_igintion.o(i.FsmIgintionDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = FsmIgintionDoingHandler &rArr; SetDcFanUfromBlf &rArr; DCFan_NonStkSet &rArr; GetFanUFromBlf &rArr; GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_Blf
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDcFanUfromBlf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>FsmIgintionEnterHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, fsm_igintion.o(i.FsmIgintionEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmIgintionEnterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>FsmInitDoingHandler</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, fsm_init.o(i.FsmInitDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FsmInitDoingHandler &rArr; ValveCheckFunction &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMaInfo
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveErrorReset
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveCheckFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>FsmInitEnterHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, fsm_init.o(i.FsmInitEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmInitEnterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>FsmPreFanDoingHandler</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, fsm_prefan.o(i.FsmPreFanDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FsmPreFanDoingHandler &rArr; DCFan_GetStkSta &rArr; GetNonStkSpd &rArr; ConvertDbgToCtrl_DCFan &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveCheckFunction
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>FsmPreFanEnterHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fsm_prefan.o(i.FsmPreFanEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FsmPreFanEnterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>FsmStableDoingHandler</STRONG> (Thumb, 546 bytes, Stack size 24 bytes, fsm_stable.o(i.FsmStableDoingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = FsmStableDoingHandler &rArr; TmpCtrlProcess &rArr; RealLoadPercent &rArr; GetLoadEData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetPercent
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDcFanUfromBlf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>FsmStableEnterHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fsm_stable.o(i.FsmStableEnterHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FsmStableEnterHandler &rArr; TmpCtrlVarReset &rArr; Reset_Pid
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlVarReset
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsm.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>FunFunction</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, user_function.o(i.FunFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FunFunction &rArr; WaterGasRecord &rArr; RecordLiterFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasRecord
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterExpedFunction
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfCelanFunction
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasExpedFunction
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasErrFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[e4]"></a>FunctionInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_function.o(i.FunctionInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[131]"></a>FunctionPercentLimit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_tmpctrl.o(i.FunctionPercentLimit))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSegLoad
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
</UL>

<P><STRONG><a name="[eb]"></a>FunctionU32Add</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_function.o(i.FunctionU32Add))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterExpedFunction
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasExpedFunction
</UL>

<P><STRONG><a name="[e5]"></a>GPIO_InHZ</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bsp_gpio.o(i.GPIO_InHZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_InHZ &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>

<P><STRONG><a name="[a7]"></a>GPIO_InPU</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_gpio.o(i.GPIO_InPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_InPU &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>

<P><STRONG><a name="[e7]"></a>GPIO_Init</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[a9]"></a>GPIO_OutL</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_gpio.o(i.GPIO_OutL))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>

<P><STRONG><a name="[e9]"></a>GPIO_OutOD</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_gpio.o(i.GPIO_OutOD))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>

<P><STRONG><a name="[e8]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[a8]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_Handler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputPortsUpdate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveShortSta
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveOpenSta
</UL>

<P><STRONG><a name="[a4]"></a>GPIO_ResetBits</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkCtrl
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>

<P><STRONG><a name="[a6]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkCtrl
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>

<P><STRONG><a name="[16c]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sh30f9xx_sb0_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>

<P><STRONG><a name="[e1]"></a>GasErrFunction</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, user_function.o(i.GasErrFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GasErrFunction &rArr; SetFsmState
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[df]"></a>GasExpedFunction</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, user_function.o(i.GasExpedFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GasExpedFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmpCtrlData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionU32Add
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[ec]"></a>GetBasicBlfMax</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, user_tmpctrl.o(i.GetBasicBlfMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetBasicBlfMax &rArr; GetSurState
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSurState
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdapData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromBlfI
</UL>

<P><STRONG><a name="[ed]"></a>GetBasicBlfMin</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_tmpctrl.o(i.GetBasicBlfMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBasicBlfMin
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromBlfI
</UL>

<P><STRONG><a name="[10b]"></a>GetBlfCurOut</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdl_blf.o(i.GetBlfCurOut))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
</UL>

<P><STRONG><a name="[ee]"></a>GetBlfFromLoad</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, user_tmpctrl.o(i.GetBlfFromLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetBlfFromLoad &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
</UL>

<P><STRONG><a name="[c9]"></a>GetBlfIFromFanSet</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, user_dcfan.o(i.GetBlfIFromFanSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetBlfIFromFanSet &rArr; GetBlfIFromPercent &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromPercent
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromFanU
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[a1]"></a>GetBlfIFromPercent</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, user_tmpctrl.o(i.GetBlfIFromPercent))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetBlfIFromPercent &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromFanSet
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_NonStkSet
</UL>

<P><STRONG><a name="[ca]"></a>GetBlfIFromSeg</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, user_segctrl.o(i.GetBlfIFromSeg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetBlfIFromSeg &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[97]"></a>GetCommDebugData</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, user_debug.o(i.GetCommDebugData))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMaInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashSector0
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDebugIndexMax
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtrlCommDeal
</UL>

<P><STRONG><a name="[74]"></a>GetCommSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_comm.o(i.GetCommSet))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTemRunInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeInit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalOutPut
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSetTmpFromComm
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNWrite
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSurState
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetBathLite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPumpParm
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Work
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Timer
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterCtrl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyCatch
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpCycleFunction
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurstFunction
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasRecord
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfCelanFunction
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasErrFunction
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeJdg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KitFunction
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[d1]"></a>GetDCFanData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_dcfan.o(i.GetDCFanData))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDcFanUfromBlf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterDoingHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6DoingHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorDoingHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanDoingHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0DoingHandler
</UL>

<P><STRONG><a name="[10a]"></a>GetDCFanSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_dcfan.o(i.GetDCFanSet))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
</UL>

<P><STRONG><a name="[c7]"></a>GetDbgInfo</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_debug.o(i.GetDbgInfo))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame0LoadData
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Work
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[107]"></a>GetDebugFaMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_comm.o(i.GetDebugFaMax))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame2LoadData
</UL>

<P><STRONG><a name="[90]"></a>GetDebugIndexMax</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_debug.o(i.GetDebugIndexMax))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_Sequence
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
</UL>

<P><STRONG><a name="[a2]"></a>GetFanUFromBlf</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, user_dcfan.o(i.GetFanUFromBlf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GetFanUFromBlf &rArr; GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPercentFromBlfI
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_NonStkSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[fe]"></a>GetFirstSwSeg</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_tmpctrl.o(i.GetFirstSwSeg))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegSet
</UL>

<P><STRONG><a name="[9b]"></a>GetFlashDataSector0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdl_flash.o(i.GetFlashDataSector0))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame0LoadData
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanTypeJudge
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMaInfo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMachineId
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMax
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Check
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEndCleanTimer
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNWrite
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNonStkSpd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasErrFunction
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[d4]"></a>GetFlashDataSector1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdl_flash.o(i.GetFlashDataSector1))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionInit
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatCD
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPumpParm
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatTime
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpCycleFunction
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasRecord
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeJdg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KitFunction
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
</UL>

<P><STRONG><a name="[75]"></a>GetFsmState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsm.o(i.GetFsmState))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSurState
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_lowTemper_adjust
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_airPress_adjust
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Timer
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyCatch
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurstFunction
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfCelanFunction
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasExpedFunction
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasErrFunction
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KitFunction
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
</UL>

<P><STRONG><a name="[d3]"></a>GetFunOutputs</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_function.o(i.GetFunOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame6LoadData
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame4LoadData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame2LoadData
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6DoingHandler
</UL>

<P><STRONG><a name="[105]"></a>GetMaInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_machineinfo.o(i.GetMaInfo))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordLiterFunction
</UL>

<P><STRONG><a name="[3d]"></a>GetMachineInfo_Z8L</STRONG> (Thumb, 1616 bytes, Stack size 8 bytes, user_machineinfo.o(i.GetMachineInfo_Z8L))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetMachineInfo_Z8L
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_machineinfo.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>GetMdlTmpVal</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, user_temper.o(i.GetMdlTmpVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetMdlTmpVal &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper
</UL>

<P><STRONG><a name="[f3]"></a>GetPercentFromBlfI</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, user_tmpctrl.o(i.GetPercentFromBlfI))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMax
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_Blf
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFanUFromBlf
</UL>

<P><STRONG><a name="[ef]"></a>GetPercentFromFanU</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, user_dcfan.o(i.GetPercentFromFanU))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetPercentFromFanU &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromFanSet
</UL>

<P><STRONG><a name="[f9]"></a>GetPreHeatCD</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, user_pump.o(i.GetPreHeatCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetPreHeatCD &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame5LoadData
</UL>

<P><STRONG><a name="[fb]"></a>GetPreHeatStudy</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_pump.o(i.GetPreHeatStudy))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetPreHeatStudy &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame5LoadData
</UL>

<P><STRONG><a name="[fc]"></a>GetPreHeatTime</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_pump.o(i.GetPreHeatTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetPreHeatTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame5LoadData
</UL>

<P><STRONG><a name="[9c]"></a>GetSegCtrl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_segctrl.o(i.GetSegCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadEData
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatStopCnt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[99]"></a>GetSurState</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_systemrun.o(i.GetSurState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSurState
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMax
</UL>

<P><STRONG><a name="[7b]"></a>GetSystemRunData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_systemrun.o(i.GetSystemRunData))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame7LoadData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame5LoadData
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame4LoadData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame0LoadData
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTemRunInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkFunction
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanTypeJudge
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_handle
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromSeg
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegSet
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMaInfo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfFromLoad
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadFromTmpE
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDeadZone
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalOutPut
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysBurnAbleCheck
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSetTmpFromComm
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Check
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEndCleanTimer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromPercent
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDcFanUfromBlf
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_NonStkSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_lowTemper_adjust
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterCtrl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpTmpStop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyGetTime
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatStopCnt
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpErrCheck
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpCycleFunction
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpColdFunction
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurstFunction
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterExpedFunction
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfCelanFunction
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWashEnvState
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableEnterHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitEnterHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionEnterHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterDoingHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6DoingHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorEnterHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorDoingHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanDoingHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0EnterHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0DoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[ea]"></a>GetTmpCtrlData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_tmpctrl.o(i.GetTmpCtrlData))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSwitchPnt
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegSet
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasExpedFunction
</UL>

<P><STRONG><a name="[d6]"></a>GetValveError</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mdl_valve.o(i.GetValveError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetValveError
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
</UL>

<P><STRONG><a name="[100]"></a>GetValveOpenSta</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mdl_valve.o(i.GetValveOpenSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetValveOpenSta
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkCtrl
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveCheckFunction
</UL>

<P><STRONG><a name="[101]"></a>GetValveShortSta</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mdl_valve.o(i.GetValveShortSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetValveShortSta
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveCheckFunction
</UL>

<P><STRONG><a name="[106]"></a>GetWashModeData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_washmode.o(i.GetWashModeData))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame2LoadData
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame1LoadData
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSetTmpFromComm
</UL>

<P><STRONG><a name="[102]"></a>GetWaveInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mdl_getwave.o(i.GetWaveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetWaveInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[1a3]"></a>GetWaveSensorValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mdl_getwave.o(i.GetWaveSensorValue))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
</UL>

<P><STRONG><a name="[103]"></a>GetWaveTask</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, mdl_getwave.o(i.GetWaveTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetWaveTask &rArr; CalWaterFlux &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalWaterFlux
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalFanSpeed
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_handle
</UL>

<P><STRONG><a name="[7c]"></a>GetWorkCon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_machineinfo.o(i.GetWorkCon))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlInit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetManualSeg
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSwitchPnt
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegSet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfFromLoad
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSegLoad
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadEData
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatStopCnt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[76]"></a>GetpPumpParm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_pump.o(i.GetpPumpParm))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame4LoadData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame0LoadData
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysBurnAbleCheck
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Check
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEndCleanTimer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterExpedFunction
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProtcetFunction
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorDoingHandler
</UL>

<P><STRONG><a name="[166]"></a>HWDT_ConfigPeriod</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sh30f9xx_sb0_hwdt.o(i.HWDT_ConfigPeriod))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iwdt_init
</UL>

<P><STRONG><a name="[113]"></a>HWDT_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sh30f9xx_sb0_hwdt.o(i.HWDT_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_interrupt.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>KitFunction</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, user_washmode.o(i.KitFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KitFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeFunction
</UL>

<P><STRONG><a name="[18f]"></a>MDL_SetBlfOut</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mdl_blf.o(i.MDL_SetBlfOut))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_handle
</UL>

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, sh30f9xx_sb0_interrupt.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NMI_Handler &rArr; RCC_SetSystemClockSource
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetSystemClockSource
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetAHBClockDivision
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSIOnOff
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEOnOff
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHSEReadyFlag
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetAHBClockDivision
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearITPendingBit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HWDT_ReloadCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PCA1_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sh30f9xx_sb0_interrupt.o(i.PCA1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[170]"></a>PCA_Init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, sh30f9xx_sb0_pca.o(i.PCA_Init))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>

<P><STRONG><a name="[16d]"></a>PCA_OnOff</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sh30f9xx_sb0_pca.o(i.PCA_OnOff))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>

<P><STRONG><a name="[b1]"></a>PCA_SetCCRValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sh30f9xx_sb0_pca.o(i.PCA_SetCCRValue))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetPumpPWM
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetBlfPWM
</UL>

<P><STRONG><a name="[16f]"></a>PCA_StructInit</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, sh30f9xx_sb0_pca.o(i.PCA_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>

<P><STRONG><a name="[115]"></a>PID_realize</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, wjl_rsq_ai_v1.o(i.PID_realize))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PID_realize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
</UL>

<P><STRONG><a name="[173]"></a>PWM_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sh30f9xx_sb0_pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[172]"></a>PWM_OnOff</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sh30f9xx_sb0_pwm.o(i.PWM_OnOff))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[174]"></a>PWM_OutputMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sh30f9xx_sb0_pwm.o(i.PWM_OutputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_OutputMode
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[b2]"></a>PWM_SetDuty</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sh30f9xx_sb0_pwm.o(i.PWM_SetDuty))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_SetDCFanPWM
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sh30f9xx_sb0_interrupt.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[136]"></a>Pid_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wjl_rsq_ai_v1.o(i.Pid_Init))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
</UL>

<P><STRONG><a name="[e2]"></a>ProtcetFunction</STRONG> (Thumb, 376 bytes, Stack size 16 bytes, user_function.o(i.ProtcetFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ProtcetFunction &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[42]"></a>PumpBurstFunction</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, user_pump.o(i.PumpBurstFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PumpBurstFunction &rArr; PumpTmpStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpTmpStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>PumpColdFunction</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, user_pump.o(i.PumpColdFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PumpColdFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>PumpComm</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, user_pump.o(i.PumpComm))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PumpComm &rArr; PumpStudySet &rArr; PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrtieSetCD
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudySet
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpParmReSet
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[40]"></a>PumpCycleFunction</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, user_pump.o(i.PumpCycleFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PumpCycleFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>PumpCycleTime</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, user_pump.o(i.PumpCycleTime))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
</UL>

<P><STRONG><a name="[11b]"></a>PumpErrCheck</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, user_pump.o(i.PumpErrCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PumpErrCheck &rArr; SetFsmState
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[43]"></a>PumpForceFunction</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_pump.o(i.PumpForceFunction))
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>PumpFunction</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, user_pump.o(i.PumpFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PumpFunction &rArr; PumpStudyCatch &rArr; PumpStudySet &rArr; PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Work
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Timer
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_StateFunction
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterCtrl
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyCatch
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpErrCheck
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[123]"></a>PumpFunctionInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_pump.o(i.PumpFunctionInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = PumpFunctionInit &rArr; SetPumpParm &rArr; PumpStudyTimeInit &rArr; DS1302_TimeRead &rArr; DS1302_Read &rArr; GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPumpParm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[11e]"></a>PumpHeatAble</STRONG> (Thumb, 476 bytes, Stack size 32 bytes, user_pump.o(i.PumpHeatAble))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PumpHeatAble &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyAction
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[3f]"></a>PumpHeatFunction</STRONG> (Thumb, 368 bytes, Stack size 16 bytes, user_pump.o(i.PumpHeatFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PumpHeatFunction &rArr; PumpTmpStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpTmpStop
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatTime
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpCycleTime
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>PumpHeatStopCnt</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, user_pump.o(i.PumpHeatStopCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PumpHeatStopCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Timer
</UL>

<P><STRONG><a name="[fa]"></a>PumpHeatTime</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, user_pump.o(i.PumpHeatTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PumpHeatTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatCD
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
</UL>

<P><STRONG><a name="[119]"></a>PumpParmReSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_pump.o(i.PumpParmReSet))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
</UL>

<P><STRONG><a name="[125]"></a>PumpStudyAction</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, user_pump.o(i.PumpStudyAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PumpStudyAction
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatAble
</UL>

<P><STRONG><a name="[120]"></a>PumpStudyCatch</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, user_pump.o(i.PumpStudyCatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PumpStudyCatch &rArr; PumpStudySet &rArr; PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudySet
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyGetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[128]"></a>PumpStudyGetTime</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, user_pump.o(i.PumpStudyGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudySet
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyCatch
</UL>

<P><STRONG><a name="[118]"></a>PumpStudySet</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, user_pump.o(i.PumpStudySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PumpStudySet &rArr; PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyGetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterCtrl
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyCatch
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
</UL>

<P><STRONG><a name="[129]"></a>PumpStudyTimeInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_pump.o(i.PumpStudyTimeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = PumpStudyTimeInit &rArr; DS1302_TimeRead &rArr; DS1302_Read &rArr; GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_TimeRead
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPumpParm
</UL>

<P><STRONG><a name="[116]"></a>PumpTmpStop</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, user_pump.o(i.PumpTmpStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PumpTmpStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatFunction
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurstFunction
</UL>

<P><STRONG><a name="[3e]"></a>PumpUnworkFunction</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, user_pump.o(i.PumpUnworkFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PumpUnworkFunction &rArr; PumpTmpStop
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_ntc_error_get
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpTmpStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_pump.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>PumpWaterCtrl</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, user_pump.o(i.PumpWaterCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = PumpWaterCtrl &rArr; PumpStudySet &rArr; PumpStudyGetTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudySet
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[121]"></a>Pump_StateFunction</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_pump.o(i.Pump_StateFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Pump_StateFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[11d]"></a>Pump_Timer</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, user_pump.o(i.Pump_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Pump_Timer &rArr; PumpHeatStopCnt
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpHeatStopCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[122]"></a>Pump_Work</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, user_pump.o(i.Pump_Work))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Pump_Work &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDbgInfo
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
</UL>

<P><STRONG><a name="[cd]"></a>QuickSwitchSeg</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, user_segctrl.o(i.QuickSwitchSeg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = QuickSwitchSeg &rArr; GetBlfIFromPercent &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHeatStable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfIFromPercent
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlProcess
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[e6]"></a>RCC_AHBPeriphClockOnOff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_AHBPeriphClockOnOff))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lvr_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[15e]"></a>RCC_APB0PeriphClockOnOff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_APB0PeriphClockOnOff))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>

<P><STRONG><a name="[149]"></a>RCC_APB0PeriphReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_APB0PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
</UL>

<P><STRONG><a name="[17e]"></a>RCC_APB1PeriphClockOnOff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_APB1PeriphClockOnOff))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
</UL>

<P><STRONG><a name="[17f]"></a>RCC_APB1PeriphReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_APB1PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
</UL>

<P><STRONG><a name="[114]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[10d]"></a>RCC_GetAHBClockDivision</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_GetAHBClockDivision))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[12b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, sh30f9xx_sb0_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetClocksFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_systick_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[10c]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[110]"></a>RCC_GetHSEReadyFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_GetHSEReadyFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[112]"></a>RCC_HSEOnOff</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_HSEOnOff))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[10f]"></a>RCC_HSIOnOff</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_HSIOnOff))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[10e]"></a>RCC_SetAHBClockDivision</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sh30f9xx_sb0_rcc.o(i.RCC_SetAHBClockDivision))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[111]"></a>RCC_SetSystemClockSource</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sh30f9xx_sb0_rcc.o(i.RCC_SetSystemClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_SetSystemClockSource
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[95]"></a>ReSetBathLite</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_washmode.o(i.ReSetBathLite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ReSetBathLite &rArr; BathInit
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathInit
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtrlCommDeal
</UL>

<P><STRONG><a name="[db]"></a>ReSetPercent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_tmpctrl.o(i.ReSetPercent))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlInit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlVarReset
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
</UL>

<P><STRONG><a name="[12e]"></a>ReadFlash</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mdl_flash.o(i.ReadFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadFlash &rArr; FLASH_E2_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_E2_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
</UL>

<P><STRONG><a name="[77]"></a>RecordLiterFunction</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, user_function.o(i.RecordLiterFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RecordLiterFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasRecord
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
</UL>

<P><STRONG><a name="[132]"></a>RefreshBlfMaxMin</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, user_tmpctrl.o(i.RefreshBlfMaxMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RefreshBlfMaxMin &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMin
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMax
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_Blf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[82]"></a>ResetHeatStable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_tmpctrl.o(i.ResetHeatStable))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSubChgCnt
</UL>

<P><STRONG><a name="[12a]"></a>Reset_Pid</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_tmpctrl.o(i.Reset_Pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Reset_Pid
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlVarReset
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
</UL>

<P><STRONG><a name="[96]"></a>SNReSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_systemrun.o(i.SNReSet))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtrlCommDeal
</UL>

<P><STRONG><a name="[137]"></a>SNWrite</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, user_systemrun.o(i.SNWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = SNWrite &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashSector0
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sh30f9xx_sb0_interrupt.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[169]"></a>SYSCFG_VLVRConfig</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sh30f9xx_sb0_syscfg.o(i.SYSCFG_VLVRConfig))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lvr_init
</UL>

<P><STRONG><a name="[168]"></a>SYSCFG_VLVRInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sh30f9xx_sb0_syscfg.o(i.SYSCFG_VLVRInit))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lvr_init
</UL>

<P><STRONG><a name="[d0]"></a>SegCtrlInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_segctrl.o(i.SegCtrlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SegCtrlInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableEnterHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugEnterHandler
</UL>

<P><STRONG><a name="[138]"></a>SegCtrlProcess</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_segctrl.o(i.SegCtrlProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SegCtrlProcess &rArr; QuickSwitchSeg &rArr; GetBlfIFromPercent &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrl_Timer
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuickSwitchSeg
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSwitchPnt
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegSet
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[cc]"></a>SegCtrl_Timer</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, user_segctrl.o(i.SegCtrl_Timer))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlProcess
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[e3]"></a>SelfCelanFunction</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, user_function.o(i.SelfCelanFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SelfCelanFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[d5]"></a>SetDcFanUfromBlf</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, user_dcfan.o(i.SetDcFanUfromBlf))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetDcFanUfromBlf &rArr; DCFan_NonStkSet &rArr; GetFanUFromBlf &rArr; GetPercentFromBlfI &rArr; ConvertDbgToCtrl_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_NonStkSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
</UL>

<P><STRONG><a name="[d2]"></a>SetEndCleanTimer</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, user_systemrun.o(i.SetEndCleanTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEndCleanTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanDoingHandler
</UL>

<P><STRONG><a name="[cf]"></a>SetFsmStage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsm.o(i.SetFsmStage))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableEnterHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanEnterHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitEnterHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionEnterHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6EnterHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorEnterHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanEnterHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmE0EnterHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugEnterHandler
</UL>

<P><STRONG><a name="[cb]"></a>SetFsmState</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, fsm.o(i.SetFsmState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SetFsmState
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmStage
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpErrCheck
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasErrFunction
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIdleEnterDoingHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmF6DoingHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmErrorDoingHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmEndCleanDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[c8]"></a>SetManualSeg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_segctrl.o(i.SetManualSeg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetManualSeg
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[124]"></a>SetPumpParm</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, user_pump.o(i.SetPumpParm))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetPumpParm &rArr; PumpStudyTimeInit &rArr; DS1302_TimeRead &rArr; DS1302_Read &rArr; GPIO_OutL &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStudyTimeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunctionInit
</UL>

<P><STRONG><a name="[139]"></a>SetWashEnvState</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, user_washmode.o(i.SetWashEnvState))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SetWashEnvState &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_ntc_error_get
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeFunction
</UL>

<P><STRONG><a name="[13b]"></a>SoftI2C_delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, softwarei2c.o(i.SoftI2C_delay))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>

<P><STRONG><a name="[13a]"></a>SoftI2C_read_byte</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, softwarei2c.o(i.SoftI2C_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SoftI2C_read_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>

<P><STRONG><a name="[13c]"></a>SoftI2C_start</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, softwarei2c.o(i.SoftI2C_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SoftI2C_start &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_write
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>

<P><STRONG><a name="[13d]"></a>SoftI2C_stop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, softwarei2c.o(i.SoftI2C_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SoftI2C_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_write
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>

<P><STRONG><a name="[13e]"></a>SoftI2C_write_byte</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, softwarei2c.o(i.SoftI2C_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_write
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sh30f9xx_sb0_interrupt.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; ValveWorkCtrl &rArr; GetValveOpenSta
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartCheckReceive
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskTick
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_tick
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkCtrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, system_sh30f9xx_sb0.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetSystemClockSource
</UL>

<P><STRONG><a name="[143]"></a>SystemFlashInit</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, mdl_flash.o(i.SystemFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SystemFlashInit &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlash
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[2c]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_sh30f9xx_sb0.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToHSI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_FIFO1_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sh30f9xx_sb0_interrupt.o(i.TIM2_FIFO1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_FIFO1_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPulseTm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[17a]"></a>TIM_INTConfig</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, sh30f9xx_sb0_timer.o(i.TIM_INTConfig))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
</UL>

<P><STRONG><a name="[179]"></a>TIM_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, sh30f9xx_sb0_timer.o(i.TIM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
</UL>

<P><STRONG><a name="[17b]"></a>TIM_OnOff</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, sh30f9xx_sb0_timer.o(i.TIM_OnOff))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
</UL>

<P><STRONG><a name="[148]"></a>TIM_Reset</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sh30f9xx_sb0_timer.o(i.TIM_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
</UL>

<P><STRONG><a name="[14a]"></a>TmpCtrlInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_tmpctrl.o(i.TmpCtrlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TmpCtrlInit &rArr; TmpCtrlVarReset &rArr; Reset_Pid
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlVarReset
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetPercent
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[c6]"></a>TmpCtrlPrepare</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, user_tmpctrl.o(i.TmpCtrlPrepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TmpCtrlPrepare &rArr; GetLoadFromTmpE
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSubChgCnt
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLoadAvg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadFromTmpE
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[da]"></a>TmpCtrlProcess</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, user_tmpctrl.o(i.TmpCtrlProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = TmpCtrlProcess &rArr; RealLoadPercent &rArr; GetLoadEData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlProcess
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrl_Timer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSegLoad
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
</UL>

<P><STRONG><a name="[dc]"></a>TmpCtrlVarReset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, user_tmpctrl.o(i.TmpCtrlVarReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TmpCtrlVarReset &rArr; Reset_Pid
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetPercent
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableEnterHandler
</UL>

<P><STRONG><a name="[1a]"></a>UART0_Handler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_uart0.o(i.UART0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0_Handler &rArr; UART_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART1_Handler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_uart1.o(i.UART1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_Handler &rArr; UART_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>UART2_Handler</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, mdl_usart.o(i.UART2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART2_Handler &rArr; UART_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[180]"></a>UART_ClearFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sh30f9xx_sb0_uart.o(i.UART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
</UL>

<P><STRONG><a name="[181]"></a>UART_INTConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sh30f9xx_sb0_uart.o(i.UART_INTConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
</UL>

<P><STRONG><a name="[14f]"></a>UART_Init</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, sh30f9xx_sb0_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_Init &rArr; RCC_GetClocksFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
</UL>

<P><STRONG><a name="[14e]"></a>UART_ReceiveData</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sh30f9xx_sb0_uart.o(i.UART_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>

<P><STRONG><a name="[d9]"></a>UpdateMaInfo</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_machineinfo.o(i.UpdateMaInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpdateMaInfo &rArr; GetMachineId
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMachineId
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
</UL>

<P><STRONG><a name="[150]"></a>UserWrite</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_systemrun.o(i.UserWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = UserWrite &rArr; writeFlashSector1 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashSector1
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[11a]"></a>UserWrtieSetCD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_systemrun.o(i.UserWrtieSetCD))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpComm
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasRecord
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeJdg
</UL>

<P><STRONG><a name="[d8]"></a>ValveCheckFunction</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, mdl_valve.o(i.ValveCheckFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ValveCheckFunction &rArr; Drv_OutPut_Set &rArr; Drv_SetPumpPWM &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_OutPut_Set
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveShortSta
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveOpenSta
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
</UL>

<P><STRONG><a name="[d7]"></a>ValveErrorReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mdl_valve.o(i.ValveErrorReset))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
</UL>

<P><STRONG><a name="[142]"></a>ValveWorkCtrl</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, mdl_valve.o(i.ValveWorkCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ValveWorkCtrl &rArr; GetValveOpenSta
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValveOpenSta
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[152]"></a>ValveWorkFunction</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, mdl_valve.o(i.ValveWorkFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ValveWorkFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_handle
</UL>

<P><STRONG><a name="[153]"></a>WashModeFunction</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_washmode.o(i.WashModeFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WashModeFunction &rArr; SetWashEnvState &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeJdg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWashEnvState
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KitFunction
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[155]"></a>WashModeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, user_washmode.o(i.WashModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WashModeInit &rArr; BathInit
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[154]"></a>WashModeJdg</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, user_washmode.o(i.WashModeJdg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WashModeJdg &rArr; BathInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrtieSetCD
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BathInit
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeFunction
</UL>

<P><STRONG><a name="[de]"></a>WaterExpedFunction</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, user_function.o(i.WaterExpedFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WaterExpedFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionU32Add
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[157]"></a>WaterGasInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, user_function.o(i.WaterGasInit))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Check
</UL>

<P><STRONG><a name="[e0]"></a>WaterGasRecord</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, user_function.o(i.WaterGasRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WaterGasRecord &rArr; RecordLiterFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrtieSetCD
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordLiterFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
</UL>

<P><STRONG><a name="[156]"></a>Water_Check</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, user_systemrun.o(i.Water_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Water_Check
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
</UL>

<P><STRONG><a name="[145]"></a>WriteFlash</STRONG> (Thumb, 66 bytes, Stack size 120 bytes, mdl_flash.o(i.WriteFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2WriteBuf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2EraseSector
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashSector1
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashSector0
</UL>

<P><STRONG><a name="[70]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[12c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sh30f9xx_sb0_rcc.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[1c2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1c3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1c4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1a0]"></a>adc_result_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mdl_adc.o(i.adc_result_get))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
</UL>

<P><STRONG><a name="[158]"></a>bps_adc_get_value</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bsp_adc.o(i.bps_adc_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bps_adc_get_value &rArr; ADC_ChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConversion
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetSoftwareStartConversionStatus
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_adc_handle
</UL>

<P><STRONG><a name="[15d]"></a>bsp_adc_init</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, bsp_adc.o(i.bsp_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_adc_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockOnOff
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_OnOff
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[161]"></a>bsp_exit_init</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, bsp_exit.o(i.bsp_exit_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bsp_exit_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_PinConfig
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockOnOff
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>bsp_gpio_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, bsp_gpio.o(i.bsp_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_gpio_init &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutOD
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutL
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InPU
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InHZ
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>bsp_iwdt_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_iwdt.o(i.bsp_iwdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_iwdt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HWDT_ConfigPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>bsp_lvr_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_lvr.o(i.bsp_lvr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_lvr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_VLVRInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_VLVRConfig
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>bsp_pca_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_pca.o(i.bsp_pca_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bsp_pca_init &rArr; bsp_pca_pwm_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16b]"></a>bsp_pca_pwm_init</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, bsp_pca.o(i.bsp_pca_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_pca_pwm_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_StructInit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_SetCCRValue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_OnOff
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockOnOff
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_init
</UL>

<P><STRONG><a name="[171]"></a>bsp_pwm3_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, bsp_pwm.o(i.bsp_pwm3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bsp_pwm3_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockOnOff
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetDuty
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OutputMode
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OnOff
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_init
</UL>

<P><STRONG><a name="[175]"></a>bsp_pwm_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_pwm.o(i.bsp_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_pwm_init &rArr; bsp_pwm3_init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm3_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[176]"></a>bsp_systick_init</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, bsp_systick.o(i.bsp_systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_systick_init &rArr; RCC_GetClocksFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[178]"></a>bsp_tim2_init</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bsp_tim.o(i.bsp_tim2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_tim2_init &rArr; TIM_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockOnOff
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OnOff
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_INTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_init
</UL>

<P><STRONG><a name="[17c]"></a>bsp_tim_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_tim.o(i.bsp_tim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_tim_init &rArr; bsp_tim2_init &rArr; TIM_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17d]"></a>bsp_uart2_init</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, bsp_uart2.o(i.bsp_uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_uart2_init &rArr; UART_Init &rArr; RCC_GetClocksFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockOnOff
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTConfig
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearFlag
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphReset
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockOnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>comm_tick</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, user_comm.o(i.comm_tick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a5]"></a>delay_nus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mdl_ds1302.o(i.delay_nus))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS1302_Read
</UL>

<P><STRONG><a name="[0]"></a>drv_handle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task.o(i.drv_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_handle &rArr; Comm_Recv &rArr; Comm_Recv_Deal &rArr; user_comm_operator_check_receive &rArr; user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveTask
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_InOutput_Process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>fifoInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fifo.o(i.fifoInit))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Init
</UL>

<P><STRONG><a name="[8c]"></a>fifoRead</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, fifo.o(i.fifoRead))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_LoadData
</UL>

<P><STRONG><a name="[8f]"></a>fifoWrite</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, fifo.o(i.fifoWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fifoWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_Sequence
</UL>

<P><STRONG><a name="[7d]"></a>getAdapData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, user_adaptive.o(i.getAdapData))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame8LoadData
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBasicBlfMax
</UL>

<P><STRONG><a name="[182]"></a>getDataFromComm</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, user_systemrun.o(i.getDataFromComm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getDataFromComm &rArr; getOnOffDataFromComm
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSetTmpFromComm
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getOnOffDataFromComm
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[184]"></a>getOnOffDataFromComm</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, user_systemrun.o(i.getOnOffDataFromComm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getOnOffDataFromComm
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterGasInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector1
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrtieSetCD
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
</UL>

<P><STRONG><a name="[183]"></a>getSetTmpFromComm</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, user_systemrun.o(i.getSetTmpFromComm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getSetTmpFromComm
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWashModeData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
</UL>

<P><STRONG><a name="[185]"></a>hb_snsor_process</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_adaptive.o(i.hb_snsor_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hb_snsor_process &rArr; spl0601_get_temperature &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_temperature
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_raw_pressure
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_pressure
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive
</UL>

<P><STRONG><a name="[2b]"></a>main</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = main &rArr; softInit &rArr; SystemFlashInit &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart2_init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_systick_init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lvr_init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iwdt_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_gpio_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_exit_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[18d]"></a>mdl_adc_handle</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, mdl_adc.o(i.mdl_adc_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mdl_adc_handle &rArr; bps_adc_get_value &rArr; ADC_ChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bps_adc_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_handle
</UL>

<P><STRONG><a name="[18e]"></a>mdl_adc_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mdl_adc.o(i.mdl_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mdl_adc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper_init
</UL>

<P><STRONG><a name="[3]"></a>mdl_handle</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task.o(i.mdl_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mdl_handle &rArr; mdl_adc_handle &rArr; bps_adc_get_value &rArr; ADC_ChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_adc_handle
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValveWorkFunction
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDL_SetBlfOut
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blf_Iteration_10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[109]"></a>pGetValveState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mdl_valve.o(i.pGetValveState))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame7LoadData
</UL>

<P><STRONG><a name="[14d]"></a>pidCtrlHandle</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, user_tmpctrl.o(i.pidCtrlHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pidCtrlHandle &rArr; PID_realize &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDeadZone
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[18b]"></a>softInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, task.o(i.softInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = softInit &rArr; SystemFlashInit &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper_init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartInit
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTemRunInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeInit
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlInit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFlashInit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFsmState
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlInit
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunctionInit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveInit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_InOutput_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[194]"></a>spl0601_get_calib_param</STRONG> (Thumb, 500 bytes, Stack size 16 bytes, spl06_01.o(i.spl0601_get_calib_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = spl0601_get_calib_param &rArr; spl0601_read &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
</UL>

<P><STRONG><a name="[189]"></a>spl0601_get_pressure</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, spl06_01.o(i.spl0601_get_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = spl0601_get_pressure &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[187]"></a>spl0601_get_raw_pressure</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, spl06_01.o(i.spl0601_get_raw_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spl0601_get_raw_pressure &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[186]"></a>spl0601_get_raw_temp</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, spl06_01.o(i.spl0601_get_raw_temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spl0601_get_raw_temp &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[188]"></a>spl0601_get_temperature</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, spl06_01.o(i.spl0601_get_temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = spl0601_get_temperature &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>

<P><STRONG><a name="[198]"></a>spl0601_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, spl06_01.o(i.spl0601_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = spl0601_init &rArr; spl0601_rateset &rArr; spl0601_write &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_calib_param
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_init
</UL>

<P><STRONG><a name="[199]"></a>spl0601_rateset</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, spl06_01.o(i.spl0601_rateset))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = spl0601_rateset &rArr; spl0601_write &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_write
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_read
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
</UL>

<P><STRONG><a name="[195]"></a>spl0601_read</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, spl06_01.o(i.spl0601_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spl0601_read &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_get_calib_param
</UL>

<P><STRONG><a name="[19b]"></a>spl0601_start_continuous</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, spl06_01.o(i.spl0601_start_continuous))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = spl0601_start_continuous &rArr; spl0601_write &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_write
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_init
</UL>

<P><STRONG><a name="[19a]"></a>spl0601_write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, spl06_01.o(i.spl0601_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spl0601_write &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_write_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_stop
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2C_start
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_continuous
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
</UL>

<P><STRONG><a name="[19c]"></a>sysBurnAbleCheck</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, user_systemrun.o(i.sysBurnAbleCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sysBurnAbleCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[192]"></a>sysTemRunInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, user_systemrun.o(i.sysTemRunInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sysTemRunInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[19d]"></a>systemRun</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, user_systemrun.o(i.systemRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = systemRun &rArr; SNWrite &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBlfMaxMin
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalOutPut
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysBurnAbleCheck
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromComm
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrite
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[19e]"></a>systemSignalInput</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, user_systemrun.o(i.systemSignalInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = systemSignalInput &rArr; Water_Check
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_result_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_result_get
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaveSensorValue
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Water_Check
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flame_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[19f]"></a>systemSignalOutPut</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, user_systemrun.o(i.systemSignalOutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systemSignalOutPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
</UL>

<P><STRONG><a name="[18c]"></a>task</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, task.o(i.task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13f]"></a>taskTick</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, task.o(i.taskTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ce]"></a>temper_err_get</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_temper.o(i.temper_err_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = temper_err_get
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_ntc_error_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmStableDoingHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmPreFanDoingHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmInitDoingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmIgintionDoingHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmDebugDoingHandler
</UL>

<P><STRONG><a name="[108]"></a>temper_ntc_error_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_temper.o(i.temper_ntc_error_get))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainFrame3LoadData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_err_get
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpUnworkFunction
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWashEnvState
</UL>

<P><STRONG><a name="[1a2]"></a>temper_result_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_temper.o(i.temper_result_get))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemSignalInput
</UL>

<P><STRONG><a name="[140]"></a>usartCheckReceive</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, mdl_usart.o(i.usartCheckReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usartCheckReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartSendOverTimerProt
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1aa]"></a>usartClearReceive</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mdl_usart.o(i.usartClearReceive))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>

<P><STRONG><a name="[1a9]"></a>usartGetReceive</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mdl_usart.o(i.usartGetReceive))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>

<P><STRONG><a name="[191]"></a>usartInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mdl_usart.o(i.usartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[8e]"></a>usartSend</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, mdl_usart.o(i.usartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usartSend
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_LoadData
</UL>

<P><STRONG><a name="[1a4]"></a>usartSendOverTimerProt</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, mdl_usart.o(i.usartSendOverTimerProt))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartCheckReceive
</UL>

<P><STRONG><a name="[1a5]"></a>user_adaptive</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_adaptive.o(i.user_adaptive))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = user_adaptive &rArr; hb_snsor_process &rArr; spl0601_get_temperature &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_lowTemper_adjust
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_coupling_adjust
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive_airPress_adjust
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hb_snsor_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[1a6]"></a>user_adaptive_airPress_adjust</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, user_adaptive.o(i.user_adaptive_airPress_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = user_adaptive_airPress_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive
</UL>

<P><STRONG><a name="[1a8]"></a>user_adaptive_coupling_adjust</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, user_adaptive.o(i.user_adaptive_coupling_adjust))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive
</UL>

<P><STRONG><a name="[193]"></a>user_adaptive_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, user_adaptive.o(i.user_adaptive_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = user_adaptive_init &rArr; spl0601_init &rArr; spl0601_rateset &rArr; spl0601_write &rArr; SoftI2C_write_byte &rArr; GPIO_OutOD &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_start_continuous
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_rateset
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spl0601_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[1a7]"></a>user_adaptive_lowTemper_adjust</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, user_adaptive.o(i.user_adaptive_lowTemper_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = user_adaptive_lowTemper_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFsmState
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive
</UL>

<P><STRONG><a name="[87]"></a>user_comm_operator_check_receive</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, user_comm.o(i.user_comm_operator_check_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = user_comm_operator_check_receive &rArr; user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriorDeal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Verify
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartGetReceive
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartClearReceive
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_unpack_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Recv_Deal
</UL>

<P><STRONG><a name="[1ab]"></a>user_comm_operator_unpack_receive</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, user_comm.o(i.user_comm_operator_unpack_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtrlCommDeal
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>

<P><STRONG><a name="[2]"></a>user_handle</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, task.o(i.user_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = user_handle &rArr; systemRun &rArr; SNWrite &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_temper
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_adaptive
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRun
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashModeFunction
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFunction
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunFunction
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FanTypeJudge
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[1ad]"></a>user_temper</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, user_temper.o(i.user_temper))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = user_temper &rArr; GetMdlTmpVal &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMdlTmpVal
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_result_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_handle
</UL>

<P><STRONG><a name="[190]"></a>user_temper_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_temper.o(i.user_temper_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = user_temper_init &rArr; mdl_adc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdl_adc_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softInit
</UL>

<P><STRONG><a name="[f1]"></a>writeFlashSector0</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mdl_flash.o(i.writeFlashSector0))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNWrite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
</UL>

<P><STRONG><a name="[151]"></a>writeFlashSector1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mdl_flash.o(i.writeFlashSector1))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = writeFlashSector1 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWrite
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[146]"></a>SetSysClockToHSI</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, system_sh30f9xx_sb0.o(i.SetSysClockToHSI))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sh30f9xx_sb0_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sh30f9xx_sb0_keil.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>Comm_Recv_Deal</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, user_comm.o(i.Comm_Recv_Deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Comm_Recv_Deal &rArr; user_comm_operator_check_receive &rArr; user_comm_operator_unpack_receive &rArr; CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Recv
</UL>

<P><STRONG><a name="[8a]"></a>Comm_Send_LoadData</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, user_comm.o(i.Comm_Send_LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Comm_Send_LoadData &rArr; usartSend
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Verify
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartSend
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifoRead
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send
</UL>

<P><STRONG><a name="[89]"></a>Comm_Send_Sequence</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, user_comm.o(i.Comm_Send_Sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Comm_Send_Sequence &rArr; fifoWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifoWrite
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDebugIndexMax
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send
</UL>

<P><STRONG><a name="[8d]"></a>Comm_Verify</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_comm.o(i.Comm_Verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Comm_Verify
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Send_LoadData
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>

<P><STRONG><a name="[94]"></a>CtrlCommDeal</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, user_comm.o(i.CtrlCommDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = CtrlCommDeal &rArr; GetCommDebugData &rArr; writeFlashSector0 &rArr; WriteFlash &rArr; E2WriteBuf &rArr; FLASH_E2_ProgramPage_HalfWord &rArr; FLASH_E2_ProgramHalfWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SNReSet
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReSetBathLite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommDebugData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_unpack_receive
</UL>

<P><STRONG><a name="[2e]"></a>MainFrame0LoadData</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame0LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MainFrame0LoadData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDbgInfo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>MainFrame10LoadData</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame10LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>MainFrame11LoadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame11LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>MainFrame12LoadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame12LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>MainFrame13LoadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame13LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>MainFrame14LoadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame14LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>MainFrame1LoadData</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame1LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MainFrame1LoadData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWashModeData
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMaInfo
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDebugIndexMax
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCommSet
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>MainFrame2LoadData</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, user_comm.o(i.MainFrame2LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainFrame2LoadData
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWashModeData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFunOutputs
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDebugFaMax
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>MainFrame3LoadData</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame3LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MainFrame3LoadData &rArr; ConvertCtrlToDbg_Blf &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temper_ntc_error_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWashModeData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFunOutputs
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertCtrlToDbg_Blf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>MainFrame4LoadData</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame4LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MainFrame4LoadData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetpPumpParm
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFunOutputs
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>MainFrame5LoadData</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame5LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MainFrame5LoadData &rArr; GetPreHeatCD &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatTime
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatStudy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPreHeatCD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>MainFrame6LoadData</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, user_comm.o(i.MainFrame6LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainFrame6LoadData
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFunOutputs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>MainFrame7LoadData</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, user_comm.o(i.MainFrame7LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainFrame7LoadData
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pGetValveState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>MainFrame8LoadData</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, user_comm.o(i.MainFrame8LoadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MainFrame8LoadData &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdapData
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDCFanSet
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfCurOut
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>MainFrame9LoadData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_comm.o(i.MainFrame9LoadData))
<BR>[Address Reference Count : 1]<UL><LI> user_comm.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>PriorDeal</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, user_comm.o(i.PriorDeal))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_comm_operator_check_receive
</UL>

<P><STRONG><a name="[9a]"></a>DCFan_Timer</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, user_dcfan.o(i.DCFan_Timer))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFanProcess
</UL>

<P><STRONG><a name="[9f]"></a>GetNonStkSpd</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, user_dcfan.o(i.GetNonStkSpd))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GetNonStkSpd &rArr; ConvertDbgToCtrl_DCFan &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertDbgToCtrl_DCFan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFan_GetStkSta
</UL>

<P><STRONG><a name="[f2]"></a>GetDeadZone</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, user_tmpctrl.o(i.GetDeadZone))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetDeadZone &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidCtrlHandle
</UL>

<P><STRONG><a name="[f4]"></a>GetLoadEData</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, user_tmpctrl.o(i.GetLoadEData))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GetLoadEData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealLoadPercent
</UL>

<P><STRONG><a name="[f5]"></a>GetLoadFromTmpE</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_tmpctrl.o(i.GetLoadFromTmpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetLoadFromTmpE
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTheroyBlf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetModBlf_New
</UL>

<P><STRONG><a name="[f8]"></a>GetModBlf_New</STRONG> (Thumb, 744 bytes, Stack size 56 bytes, user_tmpctrl.o(i.GetModBlf_New))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GetModBlf_New &rArr; GetBlfFromLoad &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSubChgCnt
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfFromLoad
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadFromTmpE
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[ff]"></a>GetTheroyBlf</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, user_tmpctrl.o(i.GetTheroyBlf))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetTheroyBlf &rArr; GetBlfFromLoad &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlfFromLoad
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadFromTmpE
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[130]"></a>RealLoadPercent</STRONG> (Thumb, 916 bytes, Stack size 72 bytes, user_tmpctrl.o(i.RealLoadPercent))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = RealLoadPercent &rArr; GetLoadEData &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Pid
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPercentLimit
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadEData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSegCtrl
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[133]"></a>RefreshSegLoad</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, user_tmpctrl.o(i.RefreshSegLoad))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RefreshSegLoad &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPercentLimit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[14c]"></a>TmpCtrl_Timer</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, user_tmpctrl.o(i.TmpCtrl_Timer))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlProcess
</UL>

<P><STRONG><a name="[14b]"></a>UpdateLoadAvg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_tmpctrl.o(i.UpdateLoadAvg))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TmpCtrlPrepare
</UL>

<P><STRONG><a name="[f6]"></a>GetMachineId</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, user_machineinfo.o(i.GetMachineId))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetMachineId
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashDataSector0
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMaInfo
</UL>

<P><STRONG><a name="[fd]"></a>GetSegSet</STRONG> (Thumb, 494 bytes, Stack size 24 bytes, user_segctrl.o(i.GetSegSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetSegSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemRunData
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmpCtrlData
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFirstSwSeg
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlProcess
</UL>

<P><STRONG><a name="[134]"></a>RefreshSwitchPnt</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, user_segctrl.o(i.RefreshSwitchPnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RefreshSwitchPnt &rArr; SegSumLimit
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegSumLimit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTmpCtrlData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWorkCon
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SegCtrlProcess
</UL>

<P><STRONG><a name="[135]"></a>SegSumLimit</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, user_segctrl.o(i.SegSumLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SegSumLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshSwitchPnt
</UL>

<P><STRONG><a name="[16e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_pca.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pca_pwm_init
</UL>

<P><STRONG><a name="[177]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_systick_init
</UL>

<P><STRONG><a name="[af]"></a>InputPortsFilter</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, drv_inoutput.o(i.InputPortsFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InputPortsFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_InOutput_Process
</UL>

<P><STRONG><a name="[ae]"></a>InputPortsUpdate</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drv_inoutput.o(i.InputPortsUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InputPortsUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drv_InOutput_Process
</UL>

<P><STRONG><a name="[bc]"></a>f_CalPulseWidth</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, mdl_getwave.o(i.f_CalPulseWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = f_CalPulseWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_Handler
</UL>

<P><STRONG><a name="[bb]"></a>f_NopDelay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mdl_getwave.o(i.f_NopDelay))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_Handler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
